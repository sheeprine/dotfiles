---
- include_tasks: osx.yml
  when: ansible_os_family == "Darwin"

- include_tasks: linux.yml
  when: ansible_system == "Linux"

- name: Remove old zplug/zplugin install
  file:
    path: "{{ ansible_env.HOME }}/.{{ item }}"
    state: absent
  loop:
    - "zplug"
    - "zplugin"

- name: Install zinit from sources
  shell: >
    curl -fsSL
    https://raw.githubusercontent.com/zdharma-continuum/zinit/master/doc/install.sh |
    sh
  args:
    creates: "{{ ansible_env.HOME }}/.zinit"
    warn: false

- name: Create zsh config files
  template:
    src: "zshrc.j2"
    dest: "{{ ansible_env.HOME }}/.zshrc"

- name: Create zsh custom plugins directories
  file:
    path: "{{ ansible_env.HOME }}/.zinit/plugins/_local---{{ item.path[:-11] }}"
    state: directory
  loop: "{{ q('filetree', 'files/zinit/') }}"

- name: Copy custom plugins
  copy:
    src: "{{ item.src }}"
    dest: "{{ ansible_env.HOME }}/.zinit/plugins/_local---{{ item.path[:-11] }}/"
  loop: "{{ q('filetree', 'files/zinit/') }}"

- name: Detect zsh path
  command: which zsh
  register: zsh_path
  changed_when: false
  check_mode: no

- name: Add zsh to allowed shells
  become: yes
  lineinfile:
    path: /etc/shells
    regexp: "^{{ zsh_path.stdout }}$"
    line: "{{ zsh_path.stdout }}"

- name: Set zsh as default shell
  become: yes
  user:
    name: "{{ ansible_user_id }}"
    shell: "{{ zsh_path.stdout }}"

- name: "Create local binary directory"
  file:
    path: "{{ ansible_env.HOME }}/.local/bin"
    state: directory
